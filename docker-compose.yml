services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: korfbal
      POSTGRES_PASSWORD: korfbal
      POSTGRES_DB: korfbal
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
  korfbal-stream-api:
    build:
      context: .
      dockerfile: apps/korfbal-stream-api/Dockerfile
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://korfbal:korfbal@db:5432/korfbal?schema=public
      PORT: 3333
    depends_on:
      - db
    ports:
      - "3333:3333"
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3333/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
  korfbal-stream-kit:
    build:
      context: .
      dockerfile: apps/korfbal-stream-kit/Dockerfile
    ports:
      - "8080:80" # Host poort 8080 -> Container poort 80 (Nginx default)
    depends_on:
      - korfbal-stream-api # Wacht tot de API (waarmee het praat) online is
#  api:
#    build:
#      context: .
#      dockerfile: apps/api/Dockerfile
#    environment:
#      NODE_ENV: production
#      HOST: 0.0.0.0
#      PORT: 3000
#    ports:
#      - "3000:3000"
#    healthcheck:
#      test: ["CMD", "wget", "-qO-", "http://localhost:3000/"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
